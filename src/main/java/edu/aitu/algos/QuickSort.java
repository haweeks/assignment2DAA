package edu.aitu.algos; public final class QuickSort{ private QuickSort(){} public static void sort(int[] a){ if(a==null||a.length<2)return; qsort(a,0,a.length-1); insertion(a,0,a.length);} private static void qsort(int[] a,int lo,int hi){ while(lo<hi){ int p=partition(a,lo,hi); if(p-lo<hi-p){ qsort(a,lo,p); lo=p+1;} else { qsort(a,p+1,hi); hi=p; } } } private static int partition(int[] a,int lo,int hi){ int pivot=a[lo+((hi-lo)>>>1)]; int i=lo-1,j=hi+1; while(true){ do{i++;}while(a[i]<pivot); do{j--;}while(a[j]>pivot); if(i>=j) return j; int t=a[i]; a[i]=a[j]; a[j]=t; } } private static void insertion(int[] a,int l,int r){ for(int i=l+1;i<r;i++){ int x=a[i],j=i-1; while(j>=l&&a[j]>x){ a[j+1]=a[j]; j--; } a[j+1]=x; } } }